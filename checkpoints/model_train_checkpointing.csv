timestamp,subset,model,cluster_id,best_params,best_score,rmse,mean_train_score
2025-05-10_00:59:46,False,linear,0,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('time', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['weekday', 'day', 'month', 'hour'])])},2.6317292319114918,1.6222605314534073,2.646095278344028
2025-05-10_01:51:38,False,lasso,0,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('time', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['weekday', 'day', 'month', 'hour'])]), 'regressor__alpha': np.float64(0.0006951927961775605), 'regressor__max_iter': 1000},2.6302144733735178,1.6217935976484548,3.116829571133761
2025-05-10_01:55:44,False,ridge,0,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('time', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['weekday', 'day', 'month', 'hour'])]), 'regressor__alpha': np.float64(206.913808111479)},2.6312878114988463,1.622124474724072,2.648558215764503
2025-05-10_02:05:58,False,polynomial,0,{'poly__poly__degree': 2, 'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('time', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['weekday', 'day', 'month', 'hour'])])},2.8030289767456757,1.6742248883425654,2.6333971424218277
2025-05-10_02:15:15,False,decision_tree,0,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night'])]), 'regressor__max_depth': 10, 'regressor__min_samples_split': 20},2.6560625835757383,1.629743103552133,2.1254669752043416
2025-05-10_02:19:26,False,xgboost,0,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('time', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['weekday', 'day', 'month', 'hour'])]), 'regressor__learning_rate': 0.1, 'regressor__max_depth': 6, 'regressor__n_estimators': 50},2.431554188497879,1.5593441533214785,2.4515177061910864
2025-05-10_02:20:29,False,linear,1,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('sin_mo... func=<function cos_transformer.<locals>._transform at 0x72db0e954e00>, validate=True), ['month']), ('cos_hour', FunctionTransformer(feature_names_out='one-to-one', func=<function cos_transformer.<locals>._transform at 0x72db0e91bec0>, validate=True), ['hour']), ('cos_weekday', FunctionTransformer(feature_names_out='one-to-one', func=<function cos_transformer.<locals>._transform at 0x72db0e91be20>, validate=True), ['weekday'])])},0.8976854691380568,0.9474626478854229,1.1599771997166126
2025-05-10_03:07:32,False,lasso,1,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('sin_mo... func=<function cos_transformer.<locals>._transform at 0x72db0e954e00>, validate=True), ['month']), ('cos_hour', FunctionTransformer(feature_names_out='one-to-one', func=<function cos_transformer.<locals>._transform at 0x72db0e91bec0>, validate=True), ['hour']), ('cos_weekday', FunctionTransformer(feature_names_out='one-to-one', func=<function cos_transformer.<locals>._transform at 0x72db0e91be20>, validate=True), ['weekday'])]), 'regressor__alpha': np.float64(0.08858667904100823), 'regressor__max_iter': 1000},0.8486227666157428,0.9212072332628217,1.275238554447934
2025-05-10_03:12:21,False,ridge,1,{'preprocessing': ColumnTransformer(remainder='passthrough', transformers=[('num', StandardScaler(), ['temperature_2m', 'rain', 'snowfall', 'cloud_cover', 'wind_speed_10m', 'num_bikes_available', 'latitude', 'longitude']), ('cat', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['isHoliday', 'has_kiosk', 'weather_cluster', 'workhours', 'commute', 'free', 'night']), ('time', OneHotEncoder(handle_unknown='ignore', sparse_output=False), ['weekday', 'day', 'month', 'hour'])]), 'regressor__alpha': np.float64(10000.0)},0.8682636418789501,0.9318066547728397,1.160485594238303
